
;; Function matadd (_Z6mataddPPiS0_S0_jj, funcdef_no=18, decl_uid=6938, cgraph_uid=18, symbol_order=18)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->9 redirected to 10
Forwarding edge 8->9 to 10 failed.
Deleted label in block 9.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 10 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:SI 128 [ C ])
        (reg:SI 0 r0 [ C ])) "matadd.cpp":16 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:SI 129 [ A ])
        (reg:SI 1 r1 [ A ])) "matadd.cpp":16 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:SI 130 [ B ])
        (reg:SI 2 r2 [ B ])) "matadd.cpp":16 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 131 [ height ])
        (reg:SI 3 r3 [ height ])) "matadd.cpp":16 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 132 [ width ])
        (mem/c:SI (reg/f:SI 104 virtual-incoming-args) [2 width+0 S4 A32])) "matadd.cpp":16 -1
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 104 virtual-incoming-args) [2 width+0 S4 A32])
        (nil)))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 7 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 131 [ height ])
            (const_int 0 [0]))) "matadd.cpp":17 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) "matadd.cpp":17 201 {arm_cond_branch}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 45)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 120 [ ivtmp.6 ])
        (reg/v/f:SI 129 [ A ])) -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 119 [ ivtmp.7 ])
        (reg/v/f:SI 130 [ B ])) -1
     (nil))
(insn 17 16 8 4 (set (reg:SI 123 [ ivtmp.8 ])
        (reg/v/f:SI 128 [ C ])) -1
     (nil))
(insn 8 17 40 4 (set (reg/v:SI 122 [ i ])
        (const_int 0 [0])) "matadd.cpp":17 -1
     (nil))
(code_label 40 8 18 5 5 (nil) [1 uses])
(note 18 40 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 132 [ width ])
            (const_int 0 [0]))) "matadd.cpp":18 -1
     (nil))
(jump_insn 20 19 47 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "matadd.cpp":18 -1
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 34)
(note 47 20 9 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 9 47 31 6 (set (reg/v:SI 121 [ j ])
        (const_int 0 [0])) "matadd.cpp":18 -1
     (nil))
(code_label 31 9 21 7 4 (nil) [1 uses])
(note 21 31 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 7 (set (reg:SI 124 [ _31 ])
        (ashift:SI (reg/v:SI 121 [ j ])
            (const_int 2 [0x2]))) -1
     (nil))
(insn 23 22 24 7 (set (reg/f:SI 133)
        (mem/f:SI (reg:SI 123 [ ivtmp.8 ]) [0 MEM[base: _42, offset: 0B]+0 S4 A32])) "matadd.cpp":19 -1
     (nil))
(insn 24 23 25 7 (set (reg/f:SI 134)
        (mem/f:SI (reg:SI 120 [ ivtmp.6 ]) [0 MEM[base: _40, offset: 0B]+0 S4 A32])) "matadd.cpp":19 -1
     (nil))
(insn 25 24 26 7 (set (reg/f:SI 135)
        (mem/f:SI (reg:SI 119 [ ivtmp.7 ]) [0 MEM[base: _41, offset: 0B]+0 S4 A32])) "matadd.cpp":19 -1
     (nil))
(insn 26 25 27 7 (set (reg:SI 137)
        (mem:SI (plus:SI (reg/f:SI 134)
                (reg:SI 124 [ _31 ])) [2 *_5+0 S4 A32])) "matadd.cpp":19 -1
     (nil))
(insn 27 26 28 7 (set (reg:SI 138)
        (mem:SI (plus:SI (reg/f:SI 135)
                (reg:SI 124 [ _31 ])) [2 *_9+0 S4 A32])) "matadd.cpp":19 -1
     (nil))
(insn 28 27 29 7 (set (reg:SI 136)
        (plus:SI (reg:SI 137)
            (reg:SI 138))) "matadd.cpp":19 -1
     (nil))
(insn 29 28 30 7 (set (mem:SI (plus:SI (reg/f:SI 133)
                (reg:SI 124 [ _31 ])) [2 *_13+0 S4 A32])
        (reg:SI 136)) "matadd.cpp":19 -1
     (nil))
(insn 30 29 32 7 (set (reg/v:SI 121 [ j ])
        (plus:SI (reg/v:SI 121 [ j ])
            (const_int 1 [0x1]))) "matadd.cpp":18 -1
     (nil))
(insn 32 30 33 7 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 132 [ width ])
            (reg/v:SI 121 [ j ]))) "matadd.cpp":18 -1
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "matadd.cpp":18 -1
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 31)
(code_label 34 33 35 8 3 (nil) [1 uses])
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg/v:SI 122 [ i ])
        (plus:SI (reg/v:SI 122 [ i ])
            (const_int 1 [0x1]))) "matadd.cpp":17 -1
     (nil))
(insn 37 36 38 8 (set (reg:SI 120 [ ivtmp.6 ])
        (plus:SI (reg:SI 120 [ ivtmp.6 ])
            (const_int 4 [0x4]))) -1
     (nil))
(insn 38 37 39 8 (set (reg:SI 119 [ ivtmp.7 ])
        (plus:SI (reg:SI 119 [ ivtmp.7 ])
            (const_int 4 [0x4]))) -1
     (nil))
(insn 39 38 41 8 (set (reg:SI 123 [ ivtmp.8 ])
        (plus:SI (reg:SI 123 [ ivtmp.8 ])
            (const_int 4 [0x4]))) -1
     (nil))
(insn 41 39 42 8 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 131 [ height ])
            (reg/v:SI 122 [ i ]))) "matadd.cpp":17 -1
     (nil))
(jump_insn 42 41 44 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "matadd.cpp":17 -1
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 40)
(note 44 42 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 45 44 46 10 1 (nil) [1 uses])
(note 46 45 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
